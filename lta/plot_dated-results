#!/usr/bin/env python3

# plot processed (that is, dated) results from `full-analysis-run`
#
# per-line input format is:
#
# $id~$commit~$commit_date~$suite~$repeat_num~$wall_time

import pandas
import matplotlib
import matplotlib.pyplot as plt
import argparse
import datetime
import matplotlib.dates as mdates
import os

p = argparse.ArgumentParser(description="plot processed results from 'full-analysis-run'")
p.add_argument("data", help="delimited file of $id~$commit~$commit_date~$suite~$repeat_num~$wall_time")
p.add_argument("-o", "--outdir", help="save plots to specified dir (default: show, rather than save)")

args = p.parse_args()

cols = ["id", "commit", "commit_date", "suite", "repeat_num", "wall_time"]
df = pandas.read_csv(args.data, sep="~", header=None, names=cols)
df.commit_date = pandas.to_datetime(df.commit_date, format="%Y-%m-%d %H:%M:%S%z")
start = pandas.to_datetime('2019-01-01 01:00:00+00:00', format="%Y-%m-%d %H:%M:%S%z")
df = df[df.commit_date > start]

for suite, df_s in df.groupby("suite"):    
    flierprops = dict(
        marker='.',
        markerfacecolor='black',
        markersize=2,
        linestyle='none',
        markeredgecolor='black')
    ax = df_s.plot.scatter(
        x="commit_date",
        y="wall_time",
        s=1,
        c='black')
    plt.axvline(
        # date we started working on perf
        x=datetime.datetime.strptime("2020-05-15 00:00:00 +0000", "%Y-%m-%d %H:%M:%S %z"),
        label="started working on perf",
        ymin=0.1,
        ymax=0.5,
        color='black',
        ls='--',
        lw=0.8
    )
    plt.suptitle(suite)
    plt.title('')
    plt.xlabel('Commit date')
    plt.ylabel('Wall time [secs]')

    # x ticks are quarterly (ish)
    ax.xaxis.set_major_locator(mdates.MonthLocator(interval=3))
    
    if args.outdir:
        plt.gcf().set_size_inches(6, 4)
        path = os.path.join(args.outdir, suite)
        plt.savefig(fname=path + '.eps', dpi=300, format='eps')
        plt.savefig(fname=path, dpi=300, format='png')
    else:
        plt.show()
    plt.close()
